#!/bin/bash -e

CIV_PATH=/opt/civ/data/Release_Deb

function is_civ_ready() {
    for i in {0..9}; do
        timeout 1 adb connect vsock:3:5555 && break
    done

    for i in {0..19}; do
        if [ "$(adb -s vsock:3:5555 shell getprop sys.boot_completed)" == "1" ] ; then
            return 0
            break
        fi
        sleep 1
    done

    return 0
}

function launch_lg_input_client()
{
    # needs to set DISPLAY env for LG_B1_Client_input be able to
    # start at boot.
    export DISPLAY=:0
    /opt/lg/bin/LG_B1_Client_input &
}

function balloon_civ()
{
    #Balloon guest memory to 2048M on boot
    if [ ! -z ${ENABLE_CIV_BALLOON} ]; then
         /opt/cfc/mwc/bin/balloon_guest.sh 2048
    fi
}

function pause_civ()
{
    if [ -z "$(pidof mwc_launcher)" ] && [ -z "$(pgrep -ax adb | grep -v "fork-server")" ] && [ -z "$(pidof startapp)" ]; then
        # Pause CiV
        /opt/cfc/mwc/bin/pause_civ.sh
        # Kill adb server for power saving
        # Check the running environment again to avoid race condition considering
        # pause_civ.sh might be blocked a while already.
        if [ -z "$(pidof mwc_launcher)" ] && [ -z "$(pgrep -ax adb | grep -v "fork-server")" ] && [ -z "$(pidof startapp)" ]; then
            adb kill-server
        fi
    fi
}

#----------------- Main Process started from here --------------------

sleep 10

#is_civ_ready

${CIV_PATH}/scripts/stream &

# LG_B1_Client_input will be launched in rc.civ.pre
#launch_lg_input_client

#/etc/sharefolder_monitor.sh &

#balloon_civ

/opt/lg/bin/LG_B1_Client_clipboard guestClipboard:enable=true &

THEUSER=$(users | awk '{print $1;}')
sleep 20
touch /var/lock/civ_startapp_$THEUSER.lock
#exec {CIV_STARTAPP_LOCK_FD}</var/lock/civ_startapp_$THEUSER.lock
#if flock -n -x ${CIV_STARTAPP_LOCK_FD} ; then
#    pause_civ
#fi
#exec {CIV_STARTAPP_LOCK_FD}<&-

exit 0
